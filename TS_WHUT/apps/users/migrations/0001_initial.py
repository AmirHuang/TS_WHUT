# Generated by Django 2.0.7 on 2018-11-24 09:31

import datetime
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import utils.storage


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('real_name', models.CharField(blank=True, max_length=11, null=True, verbose_name='姓名')),
                ('qq', models.CharField(blank=True, max_length=11, null=True, verbose_name='QQ')),
                ('p_class', models.CharField(blank=True, max_length=30, null=True, verbose_name='专业班级')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='生日')),
                ('gender', models.CharField(blank=True, choices=[('male', '男'), ('female', '女')], default='female', max_length=7, null=True, verbose_name='性别')),
                ('mobile', models.CharField(blank=True, max_length=11, null=True, verbose_name='手机号码')),
                ('number', models.CharField(blank=True, max_length=20, null=True, verbose_name='学号')),
                ('image', models.ImageField(blank=True, default='heads/default.png', null=True, storage=utils.storage.ImageStorage(), upload_to='heads/%Y/%m', verbose_name='头像')),
                ('if_sign', models.BooleanField(default=False, verbose_name='签约')),
                ('follow_nums', models.IntegerField(default=0, verbose_name='关注者量')),
                ('fan_nums', models.IntegerField(default=0, verbose_name='粉丝量')),
                ('upload_nums', models.IntegerField(default=0, verbose_name='上传量')),
                ('like_nums', models.IntegerField(default=0, verbose_name='总点赞量')),
                ('collection_nums', models.IntegerField(default=0, verbose_name='总收藏量')),
                ('download_nums', models.IntegerField(default=0, verbose_name='总被下载量')),
                ('desc', models.CharField(blank=True, max_length=150, verbose_name='个人简介')),
                ('if_cer', models.BooleanField(default=False, verbose_name='是否认证')),
                ('org_name', models.CharField(blank=True, default='', max_length=50, verbose_name='组织名字')),
                ('id_card', models.ImageField(blank=True, null=True, storage=utils.storage.ImageStorage(), upload_to='id_cards/%Y/%m', verbose_name='身份证图片')),
                ('add_time', models.DateField(default=datetime.datetime.now, verbose_name='添加时间')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '用户信息',
                'verbose_name_plural': '用户信息',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='EmailVerifyRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=20, verbose_name='验证码')),
                ('send_email', models.EmailField(max_length=50, verbose_name='邮箱')),
                ('send_type', models.CharField(choices=[('register', '注册'), ('forget', '找回密码'), ('update_email', '修改邮箱')], max_length=30, verbose_name='验证码类型')),
                ('send_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='发送时间')),
            ],
            options={
                'verbose_name': '用户邮箱验证码',
                'verbose_name_plural': '用户邮箱验证码',
            },
        ),
        migrations.CreateModel(
            name='Folder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='默认文件夹', max_length=20, verbose_name='收藏夹')),
                ('add_time', models.DateField(default=datetime.datetime.now, verbose_name='添加时间')),
                ('desc', models.CharField(blank=True, max_length=150, verbose_name='描述')),
                ('nums', models.IntegerField(default=0, verbose_name='数量')),
                ('update_time', models.DateField(default=datetime.datetime.now, verbose_name='更新时间')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '用户收藏夹',
                'verbose_name_plural': '用户收藏夹',
            },
        ),
        migrations.CreateModel(
            name='Org',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, storage=utils.storage.ImageStorage(), upload_to='org/%Y/%m', verbose_name='认证图片')),
                ('teacher', models.CharField(max_length=20, verbose_name='指导老师')),
                ('name', models.CharField(max_length=50, verbose_name='组织名称')),
                ('status', models.CharField(choices=[('1', '等待认证'), ('2', '通过认证'), ('3', '未通过认证')], default='1', max_length=5, verbose_name='认证状态')),
                ('add_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='添加时间')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='关联用户')),
            ],
            options={
                'verbose_name': '组织认证',
                'verbose_name_plural': '组织认证',
            },
        ),
        migrations.CreateModel(
            name='UserMessage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('post_user', models.CharField(default='图说理工网', max_length=20, verbose_name='发送用户')),
                ('message', models.CharField(max_length=500, verbose_name='消息内容')),
                ('has_read', models.BooleanField(default=False, verbose_name='是否已读')),
                ('add_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='添加时间')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='接收用户')),
            ],
            options={
                'verbose_name': '用户消息',
                'verbose_name_plural': '用户消息',
            },
        ),
    ]
